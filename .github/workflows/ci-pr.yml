name: CI (monorepo)

on:
  pull_request:
  push:
    branches: ["**"]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  detect-changes:
    name: Detect changed areas
    runs-on: ubuntu-latest
    outputs:
      web: ${{ steps.filter.outputs.web }}
      auth: ${{ steps.filter.outputs.auth }}
      gateway: ${{ steps.filter.outputs.gateway }}
      files: ${{ steps.filter.outputs.files }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            web:
              - 'nebulavault-frontend/**'
            auth:
              - 'nebulavault-auth-service/**'
            gateway:
              - 'nebula-gateway/**'
            files:
              - 'nebulavault-file-service/**'
              - 'simple-flask-server/**'

    web:
    name: Frontend (Next.js) — build
    needs: detect-changes
    if: needs.detect-changes.outputs.web == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: nebulavault-frontend
    env:
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_PUBLIC_GATEWAY_ORIGIN: http://localhost:8080
      GATEWAY_ORIGIN: http://localhost:8080
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: nebulavault-frontend/package-lock.json
      - name: Install
        run: |
          if [ -f package-lock.json ]; then npm ci --include=dev; else npm i; fi
      - name: Lint (if present)
        run: |
          if npm run -s | grep -qE '(^| )lint( |$)'; then
            npm run lint || echo "lint had issues (not failing CI)"
          fi
      - name: Typecheck (if present)
        run: npm run typecheck --if-present
      - name: Build (with fallback)
        run: |
          if npm run -s | grep -qE '(^| )build( |$)'; then
            npm run build
          else
            npx --yes next build
          fi
      - uses: actions/upload-artifact@v4
        with:
          name: web-next-build
          path: |
            nebulavault-frontend/.next
            nebulavault-frontend/next.config.*
            nebulavault-frontend/package*.json

  auth:
    name: Auth (Node/TS) — build & test
    needs: detect-changes
    if: needs.detect-changes.outputs.auth == 'true'
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: nebulavault-auth-service } }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: nebulavault-auth-service/package-lock.json
      - name: Install
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm i; fi
      - name: Build (with fallback)
        run: |
          if npm run -s | grep -qE '(^| )build( |$)'; then
            npm run build
          else
            npx --yes tsc -p tsconfig.json
          fi
      - name: Test (if present)
        run: npm test --if-present

  gateway:
    name: Gateway (Spring Boot) — package
    needs: detect-changes
    if: needs.detect-changes.outputs.gateway == 'true'
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: nebula-gateway } }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: maven
      - name: Build with Maven (wrapper or system)
        run: |
          chmod +x mvnw || true
          ./mvnw -B -ntp -DskipTests package || mvn -B -ntp -DskipTests package
      - uses: actions/upload-artifact@v4
        with:
          name: gateway-jar
          path: nebula-gateway/target/*.jar

  files:
    name: File service (Flask) — install & tests
    needs: detect-changes
    if: needs.detect-changes.outputs.files == 'true'
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: nebulavault-file-service } }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install deps
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install flask pytest || pip install flask
          fi
      - name: Tests (if present)
        run: |
          if [ -d tests ]; then pytest -q; else echo "no tests"; fi
