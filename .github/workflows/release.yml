name: Release (build & push images)

on:
  push:
    branches: [main]
    tags: ["v*"]

permissions:
  contents: read
  packages: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

env:
  WEB_IMG: ghcr.io/${{ github.repository_owner }}/nebulavault-web
  AUTH_IMG: ghcr.io/${{ github.repository_owner }}/nebulavault-auth
  GATEWAY_IMG: ghcr.io/${{ github.repository_owner }}/nebulavault-gateway
  FILES_IMG: ghcr.io/${{ github.repository_owner }}/nebulavault-files

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      web: ${{ steps.filter.outputs.web }}
      auth: ${{ steps.filter.outputs.auth }}
      gateway: ${{ steps.filter.outputs.gateway }}
      files: ${{ steps.filter.outputs.files }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            web:
              - 'nebulavault-frontend/**'
            auth:
              - 'nebulavault-auth-service/**'
            gateway:
              - 'nebula-gateway/**'
            files:
              - 'nebulavault-file-service/**'

  login:
    runs-on: ubuntu-latest
    steps:
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

  web:
    name: Build & push — Web
    runs-on: ubuntu-latest
    needs: [detect-changes, login]
    if: needs.detect-changes.outputs.web == 'true'
    steps:
      - uses: actions/checkout@v4
      - id: hasdf
        run: |
          if [ -f nebulavault-frontend/Dockerfile ]; then echo "path=nebulavault-frontend" >> $GITHUB_OUTPUT; fi
      - id: meta
        if: steps.hasdf.outputs.path != ''
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.WEB_IMG }}
          tags: |
            type=sha,format=long
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=raw,value=latest,enable={{is_default_branch}}
      - uses: docker/build-push-action@v6
        if: steps.hasdf.outputs.path != ''
        with:
          context: ${{ steps.hasdf.outputs.path }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  auth:
    name: Build & push — Auth
    runs-on: ubuntu-latest
    needs: [detect-changes, login]
    if: needs.detect-changes.outputs.auth == 'true'
    steps:
      - uses: actions/checkout@v4
      - id: hasdf
        run: |
          if [ -f nebulavault-auth-service/Dockerfile ]; then echo "path=nebulavault-auth-service" >> $GITHUB_OUTPUT; fi
      - id: meta
        if: steps.hasdf.outputs.path != ''
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.AUTH_IMG }}
          tags: |
            type=sha,format=long
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=raw,value=latest,enable={{is_default_branch}}
      - uses: docker/build-push-action@v6
        if: steps.hasdf.outputs.path != ''
        with:
          context: ${{ steps.hasdf.outputs.path }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  gateway:
    name: Build & push — Gateway
    runs-on: ubuntu-latest
    needs: [detect-changes, login]
    if: needs.detect-changes.outputs.gateway == 'true'
    steps:
      - uses: actions/checkout@v4
      - id: hasdf
        run: |
          if [ -f nebula-gateway/Dockerfile ]; then echo "path=nebula-gateway" >> $GITHUB_OUTPUT; fi
      - id: meta
        if: steps.hasdf.outputs.path != ''
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.GATEWAY_IMG }}
          tags: |
            type=sha,format=long
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=raw,value=latest,enable={{is_default_branch}}
      - uses: docker/build-push-action@v6
        if: steps.hasdf.outputs.path != ''
        with:
          context: ${{ steps.hasdf.outputs.path }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  files:
    name: Build & push — File service
    runs-on: ubuntu-latest
    needs: [detect-changes, login]
    if: needs.detect-changes.outputs.files == 'true'
    steps:
      - uses: actions/checkout@v4
      - id: hasdf
        run: |
          if [ -f nebulavault-file-service/Dockerfile ]; then echo "path=nebulavault-file-service" >> $GITHUB_OUTPUT; fi
      - id: meta
        if: steps.hasdf.outputs.path != ''
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.FILES_IMG }}
          tags: |
            type=sha,format=long
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=raw,value=latest,enable={{is_default_branch}}
      - uses: docker/build-push-action@v6
        if: steps.hasdf.outputs.path != ''
        with:
          context: ${{ steps.hasdf.outputs.path }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
